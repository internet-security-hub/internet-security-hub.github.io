name: Working Auto Dates
on:
  schedule:
    - cron: '0 22 * * *'  # –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 01:00 MSK (22:00 UTC)
  workflow_dispatch:  # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫

jobs:
  update-dates:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Update dates in all files
        run: |
          # –ú–æ—Å–∫–æ–≤—Å–∫–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
          MOSCOW_DATE=$(TZ=Europe/Moscow date +"%Y-%m-%d")
          MOSCOW_DATETIME="${MOSCOW_DATE}T01:00:00+03:00"
          TIMESTAMP=$(TZ=Europe/Moscow date +"%Y-%m-%d_%H-%M-%S")
          
          echo "üïê –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ –º–æ—Å–∫–æ–≤—Å–∫—É—é –¥–∞—Ç—É: $MOSCOW_DATE"
          echo "‚è∞ –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è: $MOSCOW_DATETIME"
          
          # –°—á–µ—Ç—á–∏–∫ —Ñ–∞–π–ª–æ–≤
          FILES_UPDATED=0
          
          # 1. –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ HTML —Ñ–∞–π–ª—ã
          find . -name "*.html" -type f | while read file; do
            echo "üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: $file"
            
            # –û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ meta-—Ç–µ–≥–∏ –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ
            if grep -q 'article:modified_time' "$file"; then
              sed -i 's/<meta property="article:modified_time" content="[^"]*"/<meta property="article:modified_time" content="'"$MOSCOW_DATETIME"'"/g' "$file"
            else
              # –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å–ª–µ viewport –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
              if grep -q '<meta name="viewport"' "$file"; then
                sed -i '/<meta name="viewport"/a \    <meta property="article:modified_time" content="'"$MOSCOW_DATETIME"'">' "$file"
              else
                # –î–æ–±–∞–≤–∏—Ç—å –≤ head
                sed -i '/<head>/a \    <meta property="article:modified_time" content="'"$MOSCOW_DATETIME"'">' "$file"
              fi
            fi
            
            # –î–æ–±–∞–≤–∏—Ç—å published_time –µ—Å–ª–∏ –Ω–µ—Ç
            if ! grep -q 'article:published_time' "$file"; then
              sed -i '/<meta property="article:modified_time"/a \    <meta property="article:published_time" content="'"$MOSCOW_DATETIME"'">' "$file"
            fi
            
            # –û–±–Ω–æ–≤–∏—Ç—å JSON-LD Schema
            sed -i 's/"dateModified": "[^"]*"/"dateModified": "'"$MOSCOW_DATE"'"/g' "$file"
            sed -i 's/"datePublished": "2025-08-[0-9][0-9]"/"datePublished": "'"$MOSCOW_DATE"'"/g' "$file"
            
            # –î–æ–±–∞–≤–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            sed -i 's/<!-- auto-update: [^>]* -->/<!-- auto-update: '"$TIMESTAMP"' -->/g' "$file"
            if ! grep -q 'auto-update:' "$file"; then
              sed -i 's|</head>|    <!-- auto-update: '"$TIMESTAMP"' -->\n</head>|' "$file"
            fi
            
            FILES_UPDATED=$((FILES_UPDATED + 1))
          done
          
          # 2. –û–±–Ω–æ–≤–∏—Ç—å sitemap.xml
          if [ -f "sitemap.xml" ]; then
            sed -i 's/<lastmod>[^<]*<\/lastmod>/<lastmod>'"$MOSCOW_DATE"'<\/lastmod>/g' sitemap.xml
            echo "‚úÖ Sitemap –æ–±–Ω–æ–≤–ª–µ–Ω"
          fi
          
          echo "üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: $FILES_UPDATED"
          
      - name: Add JavaScript auto-update script
        run: |
          # JavaScript –∫–æ–¥ –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
          cat > auto-update-script.html << 'EOF'

<script>
// Auto-update dates - Moscow timezone
(function() {
    'use strict';
    
    // –ü–æ–ª—É—á–∏—Ç—å –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è
    const moscowTime = new Date().toLocaleString("en-US", {timeZone: "Europe/Moscow"});
    const moscowDate = new Date(moscowTime).toISOString().split('T')[0];
    const moscowDateTime = moscowDate + 'T01:00:00+03:00';
    
    // –û–±–Ω–æ–≤–∏—Ç—å article:modified_time
    let metaModified = document.querySelector('meta[property="article:modified_time"]');
    if (!metaModified) {
        metaModified = document.createElement('meta');
        metaModified.setAttribute('property', 'article:modified_time');
        document.head.appendChild(metaModified);
    }
    metaModified.setAttribute('content', moscowDateTime);
    
    // –û–±–Ω–æ–≤–∏—Ç—å article:published_time
    let metaPublished = document.querySelector('meta[property="article:published_time"]');
    if (!metaPublished) {
        metaPublished = document.createElement('meta');
        metaPublished.setAttribute('property', 'article:published_time');
        metaPublished.setAttribute('content', moscowDateTime);
        document.head.appendChild(metaPublished);
    }
    
    // –û–±–Ω–æ–≤–∏—Ç—å JSON-LD Schema
    document.querySelectorAll('script[type="application/ld+json"]').forEach(function(script) {
        try {
            const data = JSON.parse(script.textContent);
            if (data.dateModified) {
                data.dateModified = moscowDate;
            }
            if (data.datePublished && !data.originalDatePublished) {
                data.originalDatePublished = data.datePublished;
                data.datePublished = moscowDate;
            }
            script.textContent = JSON.stringify(data, null, 2);
        } catch(e) {
            console.log('Schema update skipped');
        }
    });
    
    // –î–æ–±–∞–≤–∏—Ç—å —Å–∫—Ä—ã—Ç—É—é –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –¥–ª—è SEO
    if (!document.querySelector('.seo-timestamp')) {
        const timeEl = document.createElement('time');
        timeEl.className = 'seo-timestamp';
        timeEl.setAttribute('datetime', moscowDateTime);
        timeEl.setAttribute('itemprop', 'dateModified');
        timeEl.style.display = 'none';
        timeEl.textContent = moscowDate;
        document.body.appendChild(timeEl);
    }
    
})();
</script>
EOF
          
          # –î–æ–±–∞–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –≤–æ –≤—Å–µ HTML —Ñ–∞–π–ª—ã
          find . -name "*.html" -type f | while read file; do
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–∫—Ä–∏–ø—Ç
            if ! grep -q "Auto-update dates - Moscow timezone" "$file"; then
              # –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–¥ </body>
              if grep -q "</body>" "$file"; then
                sed -i 's|</body>|'"$(cat auto-update-script.html | tr '\n' '¬ß')"'\n</body>|' "$file"
                sed -i 's/¬ß/\n/g' "$file"
                echo "‚úÖ JavaScript –¥–æ–±–∞–≤–ª–µ–Ω –≤: $file"
              fi
            fi
          done
          
          # –£–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
          rm auto-update-script.html
          
      - name: Commit and push changes
        run: |
          # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          # –î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
          git add -A
          
          # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
          if git diff --staged --quiet; then
            echo "‚ÑπÔ∏è –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ–º"
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ
            FORCE_TIMESTAMP=$(TZ=Europe/Moscow date +"%Y-%m-%d %H:%M:%S MSK")
            echo "<!-- Force update: $FORCE_TIMESTAMP -->" >> index.html
            git add index.html
          fi
          
          # –°–æ–∑–¥–∞—Ç—å –∫–æ–º–º–∏—Ç
          MOSCOW_TIME=$(TZ=Europe/Moscow date +"%Y-%m-%d %H:%M MSK")
          git commit -m "ü§ñ –ê–≤—Ç–æ-–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞—Ç: $MOSCOW_TIME" || echo "Commit failed, continuing..."
          
          # Push —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
          for i in {1..5}; do
            if git push origin main; then
              echo "‚úÖ Push —É—Å–ø–µ—à–µ–Ω —Å –ø–æ–ø—ã—Ç–∫–∏ $i"
              break
            elif git push origin master; then
              echo "‚úÖ Push —É—Å–ø–µ—à–µ–Ω –≤ master —Å –ø–æ–ø—ã—Ç–∫–∏ $i"  
              break
            else
              echo "‚ö†Ô∏è Push –Ω–µ—É–¥–∞—á–µ–Ω, –ø–æ–ø—ã—Ç–∫–∞ $i –∏–∑ 5"
              sleep 3
            fi
            
            if [ $i -eq 5 ]; then
              echo "‚ùå –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ push –∏—Å—á–µ—Ä–ø–∞–Ω—ã"
              exit 1
            fi
          done
          
          echo "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
