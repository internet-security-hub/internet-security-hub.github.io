name: Full Update All Pages
on:
  workflow_dispatch:
  schedule:
    - cron: '0 22 * * *'  # –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 01:00 MSK

jobs:
  update-all:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update ALL HTML files
        run: |
          # –ú–æ—Å–∫–æ–≤—Å–∫–∏–µ –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
          MOSCOW_DATE=$(TZ=Europe/Moscow date +"%Y-%m-%d")
          MOSCOW_DATETIME="${MOSCOW_DATE}T01:00:00+03:00"
          MOSCOW_TIME=$(TZ=Europe/Moscow date +"%Y-%m-%d %H:%M MSK")
          
          echo "üóìÔ∏è –ú–æ—Å–∫–æ–≤—Å–∫–∞—è –¥–∞—Ç–∞: $MOSCOW_DATE"
          echo "üïê –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è: $MOSCOW_DATETIME"
          
          # –°—á–µ—Ç—á–∏–∫–∏
          TOTAL_FILES=0
          UPDATED_FILES=0
          
          # –ù–∞–π—Ç–∏ –í–°–ï HTML —Ñ–∞–π–ª—ã
          echo "üìÇ –ü–æ–∏—Å–∫ HTML —Ñ–∞–π–ª–æ–≤..."
          find . -name "*.html" -type f | while read file; do
            echo "üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: $file"
            TOTAL_FILES=$((TOTAL_FILES + 1))
            
            # 1. –û–±–Ω–æ–≤–∏—Ç—å/–¥–æ–±–∞–≤–∏—Ç—å article:modified_time
            if grep -q 'property="article:modified_time"' "$file"; then
              # –û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
              sed -i 's/property="article:modified_time" content="[^"]*"/property="article:modified_time" content="'"$MOSCOW_DATETIME"'"/g' "$file"
              echo "  ‚úèÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω modified_time"
            else
              # –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø–æ—Å–ª–µ viewport –∏–ª–∏ –≤ head
              if grep -q '<meta name="viewport"' "$file"; then
                sed -i '/<meta name="viewport"/a \    <meta property="article:modified_time" content="'"$MOSCOW_DATETIME"'">' "$file"
              else
                sed -i '/<head>/a \    <meta property="article:modified_time" content="'"$MOSCOW_DATETIME"'">' "$file"
              fi
              echo "  ‚ûï –î–æ–±–∞–≤–ª–µ–Ω modified_time"
            fi
            
            # 2. –î–æ–±–∞–≤–∏—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å article:published_time
            if ! grep -q 'property="article:published_time"' "$file"; then
              sed -i '/<meta property="article:modified_time"/a \    <meta property="article:published_time" content="'"$MOSCOW_DATETIME"'">' "$file"
              echo "  ‚ûï –î–æ–±–∞–≤–ª–µ–Ω published_time"
            fi
            
            # 3. –û–±–Ω–æ–≤–∏—Ç—å JSON-LD Schema dateModified
            if grep -q '"dateModified"' "$file"; then
              sed -i 's/"dateModified": "[^"]*"/"dateModified": "'"$MOSCOW_DATE"'"/g' "$file"
              echo "  üîÑ –û–±–Ω–æ–≤–ª–µ–Ω JSON-LD dateModified"
            fi
            
            # 4. –û–±–Ω–æ–≤–∏—Ç—å JSON-LD Schema datePublished –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É
            if grep -q '"datePublished"' "$file"; then
              sed -i 's/"datePublished": "[^"]*"/"datePublished": "'"$MOSCOW_DATE"'"/g' "$file"
              echo "  üîÑ –û–±–Ω–æ–≤–ª–µ–Ω JSON-LD datePublished"
            fi
            
            # 5. –î–æ–±–∞–≤–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            UNIQUE_STAMP="auto-update-$(date +%s)"
            if grep -q 'auto-update-' "$file"; then
              sed -i 's/<!-- auto-update-[^>]* -->/<!-- '"$UNIQUE_STAMP"': '"$MOSCOW_TIME"' -->/g' "$file"
            else
              sed -i 's|</head>|    <!-- '"$UNIQUE_STAMP"': '"$MOSCOW_TIME"' -->\n</head>|' "$file"
            fi
            echo "  ‚è∞ –î–æ–±–∞–≤–ª–µ–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞"
            
            UPDATED_FILES=$((UPDATED_FILES + 1))
          done
          
          echo "üìä –ù–∞–π–¥–µ–Ω–æ HTML —Ñ–∞–π–ª–æ–≤: $(find . -name "*.html" -type f | wc -l)"
          
      - name: Add JavaScript auto-update to all pages
        run: |
          # JavaScript –∫–æ–¥ –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
          cat > /tmp/auto-script.js << 'EOF'

<script>
// –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞—Ç - Moscow Time Injected
(function() {
    'use strict';
    
    // –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è
    const moscowTime = new Date().toLocaleString("en-US", {timeZone: "Europe/Moscow"});
    const moscowDate = new Date(moscowTime).toISOString().split('T')[0];
    const moscowDateTime = moscowDate + 'T01:00:00+03:00';
    
    console.log('üïê –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞—Ç –Ω–∞ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è:', moscowDateTime);
    
    // –û–±–Ω–æ–≤–∏—Ç—å article:modified_time
    let metaModified = document.querySelector('meta[property="article:modified_time"]');
    if (!metaModified) {
        metaModified = document.createElement('meta');
        metaModified.setAttribute('property', 'article:modified_time');
        document.head.appendChild(metaModified);
    }
    metaModified.setAttribute('content', moscowDateTime);
    
    // –û–±–Ω–æ–≤–∏—Ç—å article:published_time
    let metaPublished = document.querySelector('meta[property="article:published_time"]');
    if (!metaPublished) {
        metaPublished = document.createElement('meta');
        metaPublished.setAttribute('property', 'article:published_time');
        metaPublished.setAttribute('content', moscowDateTime);
        document.head.appendChild(metaPublished);
    }
    
    // –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ JSON-LD Schema
    document.querySelectorAll('script[type="application/ld+json"]').forEach(function(script) {
        try {
            const data = JSON.parse(script.textContent);
            let updated = false;
            
            if (data.dateModified) {
                data.dateModified = moscowDate;
                updated = true;
            }
            if (data.datePublished) {
                data.datePublished = moscowDate;
                updated = true;
            }
            
            if (updated) {
                script.textContent = JSON.stringify(data, null, 2);
            }
        } catch(e) {
            console.log('JSON-LD update skipped');
        }
    });
    
    // –î–æ–±–∞–≤–∏—Ç—å —Å–∫—Ä—ã—Ç—É—é SEO-–º–µ—Ç–∫—É
    if (!document.querySelector('.moscow-timestamp')) {
        const timeEl = document.createElement('time');
        timeEl.className = 'moscow-timestamp';
        timeEl.setAttribute('datetime', moscowDateTime);
        timeEl.setAttribute('itemprop', 'dateModified');
        timeEl.style.display = 'none';
        timeEl.textContent = '–û–±–Ω–æ–≤–ª–µ–Ω–æ: ' + moscowDate;
        document.body.appendChild(timeEl);
    }
    
})();
</script>
EOF
          
          # –î–æ–±–∞–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –≤–æ –í–°–ï HTML —Ñ–∞–π–ª—ã
          find . -name "*.html" -type f | while read file; do
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ —É–∂–µ –Ω–∞—à —Å–∫—Ä–∏–ø—Ç
            if ! grep -q "Moscow Time Injected" "$file"; then
              # –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–¥ </body> –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
              if grep -q "</body>" "$file"; then
                # –ß–∏—Ç–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏ –¥–æ–±–∞–≤–ª—è–µ–º
                sed -i 's|</body>|'"$(cat /tmp/auto-script.js | tr '\n' '¬ß')"'\n</body>|' "$file"
                # –ó–∞–º–µ–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
                sed -i 's/¬ß/\n/g' "$file"
                echo "‚úÖ JavaScript –¥–æ–±–∞–≤–ª–µ–Ω –≤: $file"
              else
                echo "‚ö†Ô∏è –ù–µ—Ç </body> –≤ —Ñ–∞–π–ª–µ: $file"
              fi
            else
              echo "‚è≠Ô∏è JavaScript —É–∂–µ –µ—Å—Ç—å –≤: $file"
            fi
          done
          
          # –£–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
          rm -f /tmp/auto-script.js
          
      - name: Update sitemap.xml
        run: |
          MOSCOW_DATE=$(TZ=Europe/Moscow date +"%Y-%m-%d")
          
          if [ -f "sitemap.xml" ]; then
            echo "üìç –û–±–Ω–æ–≤–ª—è–µ–º sitemap.xml..."
            # –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ lastmod –Ω–∞ —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
            sed -i 's/<lastmod>[^<]*<\/lastmod>/<lastmod>'"$MOSCOW_DATE"'<\/lastmod>/g' sitemap.xml
            
            # –î–æ–±–∞–≤–∏—Ç—å changefreq –µ—Å–ª–∏ –Ω–µ—Ç
            sed -i '/<lastmod>/a \    <changefreq>daily</changefreq>' sitemap.xml
            
            echo "‚úÖ Sitemap –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ –¥–∞—Ç—É: $MOSCOW_DATE"
          else
            echo "‚ùå –§–∞–π–ª sitemap.xml –Ω–µ –Ω–∞–π–¥–µ–Ω"
          fi
          
      - name: Commit and push all changes
        run: |
          # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          # –î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
          git add -A
          
          # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π
          echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π:"
          git status --porcelain | wc -l | xargs echo "–§–∞–π–ª–æ–≤ –∏–∑–º–µ–Ω–µ–Ω–æ:"
          
          # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—Å—Ç—å –ª–∏ —á—Ç–æ –∫–æ–º–º–∏—Ç–∏—Ç—å
          if git diff --staged --quiet; then
            echo "‚ö†Ô∏è –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π - —Å–æ–∑–¥–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ
            FORCE_UPDATE=$(TZ=Europe/Moscow date +"%Y-%m-%d_%H-%M-%S")
            echo "<!-- Force update: $FORCE_UPDATE -->" >> index.html
            git add index.html
          fi
          
          # –°–æ–∑–¥–∞—Ç—å –∫–æ–º–º–∏—Ç
          MOSCOW_TIME=$(TZ=Europe/Moscow date +"%Y-%m-%d %H:%M MSK")
          if git commit -m "ü§ñ –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü: $MOSCOW_TIME"; then
            echo "‚úÖ –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
            
            # Push —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
            for i in {1..3}; do
              if git push; then
                echo "üöÄ Push –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ —Å –ø–æ–ø—ã—Ç–∫–∏ $i"
                break
              else
                echo "‚ö†Ô∏è Push –Ω–µ—É–¥–∞—á–µ–Ω, –ø–æ–ø—ã—Ç–∫–∞ $i –∏–∑ 3"
                sleep 2
              fi
              
              if [ $i -eq 3 ]; then
                echo "‚ùå –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ push –∏—Å—á–µ—Ä–ø–∞–Ω—ã"
                exit 1
              fi
            done
          else
            echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–º–∏—Ç–∞"
            exit 1
          fi
          
          echo "üéâ –ì–û–¢–û–í–û! –í—Å–µ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã —Å –º–æ—Å–∫–æ–≤—Å–∫–∏–º –≤—Ä–µ–º–µ–Ω–µ–º!"
